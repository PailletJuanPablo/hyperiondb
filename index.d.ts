/* tslint:disable */
/* eslint-disable */

/* auto-generated by NAPI-RS */

export type HyperionDBWrapper = HyperionDbWrapper

export declare class HyperionDbWrapper {
  constructor()
  initialize(numShards: number, dataDir: string, indexedFields: Array<[string, string]>, address: string): Promise<void>
  startServer(port: number): Promise<void>
  query(queryStr: string): Promise<string>
}

export declare class HyperionDBClient {
  constructor(config: {
    numShards: number,
    dataDir: string,
    indexedFields: Array<[string, string]>,
    address: string,
    primaryKey?: string
  })

  insert(record: Record<string, any>, key?: string): Promise<string>
  delete(condition: string): Promise<boolean>
  list(): Promise<Record<string, any>[]>
  get(id: string): Promise<Record<string, any>>
  update(id: string, updates: Record<string, any>): Promise<boolean>
  query(queryStr: string): Promise<Record<string, any>[]>
}

export { HyperionDBClient } 
